initSidebarItems({"enum":[["CommunicatorRelation","The relation between two communicators."],["GroupRelation","The relation between two groups."],["IntoTopology","An enum indirecting between different concrete communicator topology types"],["Topology","An enum describing the topology of a communicator"]],"mod":[["traits","Topology traits"]],"struct":[["AnyProcess","Identifies an arbitrary process that is a member of a certain communicator, e.g. for use as a `Source` in point to point communication."],["CartesianCommunicator","A `CartesianCommunicator` is an MPI communicator object where ranks are laid out in an n-dimensional cartesian space. This gives ranks neighbors in each of those dimensions, and MPI is able to optimize the layout of these ranks to improve physical locality."],["CartesianLayout","Contains arrays describing the layout of the `CartesianCommunicator`."],["Color","A color used in a communicator split"],["DistributedGraphCommunicator","Unimplemented"],["GraphCommunicator","Unimplemented"],["Process","Identifies a process by its `Rank` within a certain communicator."],["SystemCommunicator","A built-in communicator, e.g. `MPI_COMM_WORLD`"],["SystemGroup","A built-in group, e.g. `MPI_GROUP_EMPTY`"],["UserCommunicator","A user-defined communicator"],["UserGroup","A user-defined group of processes"]],"trait":[["AsCommunicator","Something that has a communicator associated with it"],["Communicator","Communicators are contexts for communication"],["Group","Groups are collections of parallel processes"]],"type":[["Key","A key used when determining the rank order of processes after a communicator split."],["Rank","Identifies a certain process within a communicator."]]});