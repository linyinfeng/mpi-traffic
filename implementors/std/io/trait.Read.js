(function() {var implementors = {};
implementors["bincode"] = [{"text":"impl&lt;'storage&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/io/trait.Read.html\" title=\"trait std::io::Read\">Read</a> for <a class=\"struct\" href=\"bincode/de/read/struct.SliceReader.html\" title=\"struct bincode::de::read::SliceReader\">SliceReader</a>&lt;'storage&gt;","synthetic":false,"types":["bincode::de::read::SliceReader"]},{"text":"impl&lt;R:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/io/trait.Read.html\" title=\"trait std::io::Read\">Read</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/io/trait.Read.html\" title=\"trait std::io::Read\">Read</a> for <a class=\"struct\" href=\"bincode/de/read/struct.IoReader.html\" title=\"struct bincode::de::read::IoReader\">IoReader</a>&lt;R&gt;","synthetic":false,"types":["bincode::de::read::IoReader"]}];
implementors["image"] = [{"text":"impl&lt;R:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/io/trait.Read.html\" title=\"trait std::io::Read\">Read</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/io/trait.Read.html\" title=\"trait std::io::Read\">Read</a> for <a class=\"struct\" href=\"image/dxt/struct.DxtReader.html\" title=\"struct image::dxt::DxtReader\">DxtReader</a>&lt;R&gt;","synthetic":false,"types":["image::dxt::DxtReader"]},{"text":"impl&lt;R&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/io/trait.Read.html\" title=\"trait std::io::Read\">Read</a> for <a class=\"struct\" href=\"image/gif/struct.GifReader.html\" title=\"struct image::gif::GifReader\">GifReader</a>&lt;R&gt;","synthetic":false,"types":["image::gif::GifReader"]},{"text":"impl&lt;R&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/io/trait.Read.html\" title=\"trait std::io::Read\">Read</a> for <a class=\"struct\" href=\"image/hdr/struct.HdrReader.html\" title=\"struct image::hdr::HdrReader\">HdrReader</a>&lt;R&gt;","synthetic":false,"types":["image::hdr::decoder::HdrReader"]},{"text":"impl&lt;R:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/io/trait.Read.html\" title=\"trait std::io::Read\">Read</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/io/trait.Read.html\" title=\"trait std::io::Read\">Read</a> for <a class=\"struct\" href=\"image/png/struct.PngReader.html\" title=\"struct image::png::PngReader\">PngReader</a>&lt;R&gt;","synthetic":false,"types":["image::png::PngReader"]},{"text":"impl&lt;R&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/io/trait.Read.html\" title=\"trait std::io::Read\">Read</a> for <a class=\"struct\" href=\"image/tiff/struct.TiffReader.html\" title=\"struct image::tiff::TiffReader\">TiffReader</a>&lt;R&gt;","synthetic":false,"types":["image::tiff::TiffReader"]},{"text":"impl&lt;R:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/io/trait.Read.html\" title=\"trait std::io::Read\">Read</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/io/trait.Read.html\" title=\"trait std::io::Read\">Read</a> for <a class=\"struct\" href=\"image/farbfeld/struct.FarbfeldReader.html\" title=\"struct image::farbfeld::FarbfeldReader\">FarbfeldReader</a>&lt;R&gt;","synthetic":false,"types":["image::farbfeld::FarbfeldReader"]}];
implementors["rand_core"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/io/trait.Read.html\" title=\"trait std::io::Read\">Read</a> for dyn <a class=\"trait\" href=\"rand_core/trait.RngCore.html\" title=\"trait rand_core::RngCore\">RngCore</a>","synthetic":false,"types":["rand_core::RngCore"]}];
implementors["smithay_client_toolkit"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/io/trait.Read.html\" title=\"trait std::io::Read\">Read</a> for <a class=\"struct\" href=\"smithay_client_toolkit/data_device/struct.ReadPipe.html\" title=\"struct smithay_client_toolkit::data_device::ReadPipe\">ReadPipe</a>","synthetic":false,"types":["smithay_client_toolkit::data_device::data_offer::ReadPipe"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()